(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{338:function(a,s,t){"use strict";t.r(s);var n=t(7),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h3",{attrs:{id:"简单工厂模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单工厂模式"}},[a._v("#")]),a._v(" 简单工厂模式")]),a._v(" "),s("ul",[s("li",[a._v("创建型模式")]),a._v(" "),s("li",[a._v("作用: 实现了创建者和调用者分离")])]),a._v(" "),s("h3",{attrs:{id:"举个栗子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举个栗子"}},[a._v("#")]),a._v(" 举个栗子")]),a._v(" "),s("p",[a._v("假设:用户需要买车,每一个车就是一个类, 每一个类都需要new一次, 周一买特斯拉 周二买奥迪 周三买宝马 这样每次都会更改大量的代码.")]),a._v(" "),s("h4",{attrs:{id:"常规流程图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常规流程图"}},[a._v("#")]),a._v(" 常规流程图:")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://images.whcoding.com/54392-7exbf5aattw.png",alt:"54392-7exbf5aattw.png"}})]),a._v(" "),s("h4",{attrs:{id:"常规的代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常规的代码"}},[a._v("#")]),a._v(" 常规的代码:")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("// $car = new Tesla();\n// $car = new Audi();\n$car = new Benz();\n\necho $car->name();\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h4",{attrs:{id:"简单工厂模式流程图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单工厂模式流程图"}},[a._v("#")]),a._v(" 简单工厂模式流程图:")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://images.whcoding.com/15604-gnmgunoifja.png",alt:"15604-gnmgunoifja.png"}})]),a._v(" "),s("h4",{attrs:{id:"简单工厂模式代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单工厂模式代码"}},[a._v("#")]),a._v(" 简单工厂模式代码:")]),a._v(" "),s("p",[a._v("工厂文件代码:")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("class Factory\n{\n    public static function GetLogic($carName)\n    {\n        $instance = null;\n        if ($carName == '奥迪') {\n           $instance = new Audi();\n        } elseif ($carName == '宝马') {\n            $instance = new Benz();\n        } elseif ($carName == '特斯拉') {\n            $instance = new Tesla();\n        }\n        return $instance;\n    }\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br")])]),s("p",[a._v("用户文件代码:")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$myCar = Factory::GetLogic('宝马');\necho $myCar->name();\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结:")]),a._v(" "),s("blockquote",[s("p",[a._v("优点")])]),a._v(" "),s("ul",[s("li",[a._v("一个调用者想创建一个对象, 只要知道其名称就可以了.")]),a._v(" "),s("li",[a._v("扩展性高,如果想增加一个产品,只要扩展一个工厂类就可以.")]),a._v(" "),s("li",[a._v("屏蔽了类的具体实现, 调用者只关心产品的接口.")])]),a._v(" "),s("blockquote",[s("p",[a._v("缺点")])]),a._v(" "),s("ul",[s("li",[a._v("每次增加一个产品时, 都需要修改一个具体类和对象实现工厂, 使得系统中类的个数成倍增加, 在一定程度上增加了系统的复杂度, 同时也增加了系统具体类的依赖")]),a._v(" "),s("li",[a._v("同时也违背了设计模式的开闭原则, 因为每次增加一辆车或产品的类都需要去修改工厂方法, 正因为这个原则所以就有了 方法工厂模式")])]),a._v(" "),s("h3",{attrs:{id:"完整示例代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#完整示例代码"}},[a._v("#")]),a._v(" 完整示例代码:")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/whcoding/design-patterns-study/tree/master/src/Factory/Simple",target:"_blank",rel:"noopener noreferrer"}},[a._v("Github"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);