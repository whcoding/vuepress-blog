(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{337:function(t,a,r){"use strict";r.r(a);var s=r(7),e=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"工厂方法模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工厂方法模式"}},[t._v("#")]),t._v(" 工厂方法模式")]),t._v(" "),a("ul",[a("li",[t._v("创建型模式")]),t._v(" "),a("li",[t._v("工厂方法为了解决简单工厂扩展性的问题")]),t._v(" "),a("li",[t._v("简单工厂要扩展的时候, 需要修改工厂内容, 这就违背了设计模式对外扩展开放, 对内修改关闭原则 所以就有了工厂方法模式.")])]),t._v(" "),a("h3",{attrs:{id:"举个栗子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#举个栗子"}},[t._v("#")]),t._v(" 举个栗子")]),t._v(" "),a("ul",[a("li",[t._v("还是简单工厂模式的那个栗子, 我们发现简单工厂模式违背了开闭原则,那么怎么解决个问题呢请看下面")])]),t._v(" "),a("h3",{attrs:{id:"工厂方法模式流程图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工厂方法模式流程图"}},[t._v("#")]),t._v(" 工厂方法模式流程图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images.whcoding.com/92173-x95xdumtxs.png",alt:"92173-x95xdumtxs.png"}})]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[t._v("为了满足闭合原则, 同时不去改动之前的代码(也就是简单工厂中的静态方法)")]),t._v(" "),a("li",[t._v("只要是实现了接口类我们就可以随意的去扩展代码,从而避免修改之前的代码")]),t._v(" "),a("li",[t._v("如果这样的话代码量会很多,个人觉得在工作中还是要根据实际情况来决定")])]),t._v(" "),a("h3",{attrs:{id:"完整示例代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完整示例代码"}},[t._v("#")]),t._v(" 完整示例代码:")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/whcoding/design-patterns-study/tree/master/src/Factory/Method",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);